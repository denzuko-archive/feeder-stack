[
    {
        "type": 1,
        "title": "Registry",
        "description": "Docker image registry",
        "categories": [
            "docker"
        ],
        "platform": "linux",
        "logo": "https://portainer.io/images/logos/registry.png",
        "image": "registry:latest",
        "ports": [
            "5000/tcp"
        ],
        "volumes": [
            {
                "container": "/var/lib/registry"
            }
        ]
    },
    {
        "type": 2,
        "title": "feeder iot ",
        "description": "feeder iot stack - telegraf, influxdb, chronograf, kapacitor, node-red",
        "note": "feeder iot cluster, please refer to <a href=\"https://github.com/holgerimbery/feeder\" target=\"_blank\">feeder documentation</a> for production deployments.",
        "categories": [
            "smarthome"
        ],
        "platform": "linux",
        "logo": "https://portainer.io/images/logos/registry.png",
        "repository": {
            "url": "https://github.com/holgerimbery/feeder",
            "stackfile": "stacks/feeder-docker-stack.yml"
        }
    },
    {
        "type": 2,
        "title": "feeder TICK ",
        "description": "feeder TICK stack - telegraf, influxdb, chronograf, kapacitor",
        "note": "feeder TICK stack",
        "categories": [
            "smarthome"
        ],
        "platform": "linux",
        "logo": "https://portainer.io/images/logos/registry.png",
        "repository": {
            "url": "https://github.com/holgerimbery/feeder",
            "stackfile": "stacks/feeder-docker-tick-stack.yml"
        }
    },
    {
        "type": 2,
        "title": "OpenFaaS",
        "name": "func",
        "description": "Serverless functions made simple",
        "note": "Deploys the API gateway and sample functions. You can access the UI on port 8080. <b>Warning</b>: the name of the stack must be 'func'.",
        "categories": [
            "serverless"
        ],
        "platform": "linux",
        "logo": "https://portainer.io/images/logos/openfaas.png",
        "repository": {
            "url": "https://github.com/openfaas/faas",
            "stackfile": "docker-compose.yml"
        }
    },
    {
        "type": 2,
        "title": "IronFunctions",
        "description": "Open-source serverless computing platform",
        "note": "Deploys the IronFunctions API and UI.",
        "categories": [
            "serverless"
        ],
        "platform": "linux",
        "logo": "https://portainer.io/images/logos/ironfunctions.png",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "stacks/ironfunctions/docker-stack.yml"
        }
    },
    {
        "type": 2,
        "title": "CockroachDB",
        "description": "CockroachDB cluster",
        "note": "Deploys an insecure CockroachDB cluster, please refer to <a href=\"https://www.cockroachlabs.com/docs/stable/orchestrate-cockroachdb-with-docker-swarm.html\" target=\"_blank\">CockroachDB documentation</a> for production deployments.",
        "categories": [
            "database"
        ],
        "platform": "linux",
        "logo": "https://portainer.io/images/logos/cockroachdb.png",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "stacks/cockroachdb/docker-stack.yml"
        }
    },
    {
        "type": 2,
        "title": "Wordpress",
        "description": "Wordpress setup with a MySQL database",
        "note": "Deploys a Wordpress instance connected to a MySQL database.",
        "categories": [
            "CMS"
        ],
        "platform": "linux",
        "logo": "https://portainer.io/images/logos/wordpress.png",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "stacks/wordpress/docker-stack.yml"
        },
        "env": [
            {
                "name": "MYSQL_ROOT_PASSWORD",
                "label": "Database root password",
                "description": "Password used by the MySQL root user."
            }
        ]
    },
    {
        "type": 2,
        "title": "Microsoft OMS Agent",
        "description": "Microsoft Operations Management Suite Linux agent.",
        "categories": [
            "OPS"
        ],
        "platform": "linux",
        "logo": "https://portainer.io/images/logos/microsoft.png",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "stacks/microsoft-oms/docker-stack.yml"
        },
        "env": [
            {
                "name": "AZURE_WORKSPACE_ID",
                "label": "Workspace ID",
                "description": "Azure Workspace ID"
            },
            {
                "name": "AZURE_PRIMARY_KEY",
                "label": "Primary key",
                "description": "Azure primary key"
            }
        ]
    },
    {
        "title": "Sematext Docker Agent",
        "type": 2,
        "categories": [
            "Log Management",
            "Monitoring"
        ],
        "description": "Collect logs, metrics and docker events",
        "logo": "https://portainer.io/images/logos/sematext_agent.png",
        "platform": "linux",
        "repository": {
            "url": "https://github.com/portainer/templates",
            "stackfile": "stacks/sematext-agent-docker/docker-stack.yml"
        },
        "env": [
            {
                "name": "LOGSENE_TOKEN",
                "label": "Logs token"
            },
            {
                "name": "SPM_TOKEN",
                "label": "SPM monitoring token"
            }
        ],
        "volumes": [
            {
                "container": "/var/run/docker.sock",
                "bind": "/var/run/docker.sock"
            }
        ]
    }
]